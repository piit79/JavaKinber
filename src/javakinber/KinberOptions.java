/*
 * KinberOptions.java
 *
 * Created on 05-Nov-2009, 10:13:48
 */

package javakinber;

import java.util.*;
import java.io.*;

/**
 *
 * @author error
 */
public class KinberOptions extends javax.swing.JDialog {

    private JavaKinber jKinber;
    private Properties props;
    private String propsPath;

    private static final String OPTIONS_FILENAME = "JavaKinber.ini";

    public static final String OPTION_NICKNAME = "nickname";
    public static final String OPTION_USE_LAST_STATUS = "use-last-status";
    public static final String OPTION_LAST_STATUS = "last-status";
    public static final String OPTION_BIND_PORT = "bind-port";

    public static final String DEFAULT_BIND_PORT = "1001";

    /** Creates new form KinberOptions */
    public KinberOptions() {
        super();
        initComponents();
        setModal(true);
        setLocationRelativeTo(null);
        for (String text : JavaKinber.statusTexts)
            comboStatus.addItem(text);
        props = new Properties();
        setPath();
        load();
    }

    public void setKinber(JavaKinber jk) {
        jKinber = jk;
    }

    private void setPath() {
        propsPath = KinberUtil.getFolder() + "/" + OPTIONS_FILENAME;
        KinberUtil.log('-', "CONFIG", "Using config file " + propsPath);
    }

    public void load() {
        try {
            props.load(new FileInputStream(propsPath));
        } catch (Exception e) {
            KinberUtil.log('W', "CONFIG", "Cannot load config: " + e);
        }
        String nick = get(OPTION_NICKNAME, "");
        if (nick.equals("")) {
            nick = KinberUtil.getUserName();
        }
        textNickName.setText(nick);
        boolean useLastStatus = KinberUtil.parseBoolean(get(OPTION_USE_LAST_STATUS, "false"));
        cbUseLastStatus.setSelected(useLastStatus);
        String bindPort = get(OPTION_BIND_PORT, DEFAULT_BIND_PORT);
        textBindPort.setText(bindPort);
   }

    private void apply() {
        String newNickname = textNickName.getText().trim();
        set(OPTION_NICKNAME, newNickname);
        jKinber.setNickName(newNickname);
        set(OPTION_USE_LAST_STATUS, Boolean.toString(cbUseLastStatus.isSelected()));
        set(OPTION_BIND_PORT, textBindPort.getText());
    }

    public void save() {
        try {
            props.store(new FileOutputStream(propsPath), "JavaKinber Preferences\nPlease hand-edit with care :)");
        } catch (Exception e) {
            KinberUtil.log('E', "CONFIG", "Cannot save config: " + e);
        }
    }

    public String get(String key) {
        return props.getProperty(key);
    }

    public String get(String key, String defaultValue) {
        String val = props.getProperty(key);
        if (val == null) {
            val = defaultValue;
            set(key, val);
        }
        return val;
    }

    public synchronized Object set(String key, String value) {
        return props.setProperty(key, value);
    }

    public void showOptions() {
        load();
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        textNickName = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        comboStatus = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        taAutoReply = new javax.swing.JTextArea();
        cbAutoReply = new javax.swing.JCheckBox();
        cbAlwaysPrompt = new javax.swing.JCheckBox();
        cbUseLastStatus = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        textBindPort = new javax.swing.JTextField();
        resetButton = new javax.swing.JButton();
        buttonPanel = new javax.swing.JPanel();
        btOK = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();
        btApply = new javax.swing.JButton();

        setTitle("Options");
        setAlwaysOnTop(true);
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("General"));

        jLabel1.setText("Nickname:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textNickName, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textNickName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Status"));

        comboStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboStatusActionPerformed(evt);
            }
        });

        taAutoReply.setColumns(20);
        taAutoReply.setFont(new java.awt.Font("Tahoma", 0, 12));
        taAutoReply.setRows(4);
        jScrollPane1.setViewportView(taAutoReply);

        cbAutoReply.setText("Auto-reply");
        cbAutoReply.setToolTipText("Always send an auto-reply message on incoming message in this status");
        cbAutoReply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAutoReplyActionPerformed(evt);
            }
        });

        cbAlwaysPrompt.setText("Prompt on change");
        cbAlwaysPrompt.setToolTipText("Prompt for the auto-reply text when setting status");

        cbUseLastStatus.setText("Start with last status");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbUseLastStatus)
                    .addComponent(cbAutoReply)
                    .addComponent(cbAlwaysPrompt, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                    .addComponent(comboStatus, 0, 252, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(comboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbAutoReply)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbAlwaysPrompt)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbUseLastStatus)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanel2, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Network"));

        jLabel3.setText("Bind port:");

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textBindPort, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(resetButton)
                .addContainerGap(208, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textBindPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resetButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanel4, gridBagConstraints);

        buttonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        btOK.setText("OK");
        btOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOKActionPerformed(evt);
            }
        });
        buttonPanel.add(btOK);

        btCancel.setText("Cancel");
        btCancel.setDefaultCapable(false);
        btCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelActionPerformed(evt);
            }
        });
        buttonPanel.add(btCancel);

        btApply.setText("Apply");
        btApply.setDefaultCapable(false);
        buttonPanel.add(btApply);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(buttonPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btCancelActionPerformed

    private void btOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOKActionPerformed
        setVisible(false);
        apply();
        save();
    }//GEN-LAST:event_btOKActionPerformed

    private void cbAutoReplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAutoReplyActionPerformed
        taAutoReply.setEnabled(cbAutoReply.isSelected());
    }//GEN-LAST:event_cbAutoReplyActionPerformed

    private void comboStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboStatusActionPerformed
        
    }//GEN-LAST:event_comboStatusActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        textBindPort.setText(DEFAULT_BIND_PORT);
}//GEN-LAST:event_resetButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btApply;
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btOK;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JCheckBox cbAlwaysPrompt;
    private javax.swing.JCheckBox cbAutoReply;
    private javax.swing.JCheckBox cbUseLastStatus;
    private javax.swing.JComboBox comboStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton resetButton;
    private javax.swing.JTextArea taAutoReply;
    private javax.swing.JTextField textBindPort;
    private javax.swing.JTextField textNickName;
    // End of variables declaration//GEN-END:variables

}
